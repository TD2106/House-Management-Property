-- MySQL Script generated by MySQL Workbench
-- Fri Apr 14 14:22:13 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

/* SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0; */
/* SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0; */
/* SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES'; */

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP DATABASE mydb;
go

Create database mydb;
go
USE mydb;

-- -----------------------------------------------------
-- Table `mydb`.`Building`
-- -----------------------------------------------------
CREATE TABLE Building (
  [ID_Building] INT NOT NULL,
  [Address] VARCHAR(45) NULL,
  [Name] VARCHAR(45) NULL,
  [numRoom] INT NULL,
  PRIMARY KEY ([ID_Building]))
;


-- -----------------------------------------------------
-- Table `mydb`.`Apartment`
-- -----------------------------------------------------
CREATE TABLE Apartment (
  [ID_Apartment] INT NOT NULL,
  [ID_Building] INT NOT NULL,
  [numBedroom] INT NULL,
  [numBathroom] INT NULL,
  PRIMARY KEY ([ID_Apartment], [ID_Building])
 ,
  CONSTRAINT [fk_Apartment_Building]
    FOREIGN KEY ([ID_Building])
    REFERENCES Building ([ID_Building])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_Apartment_Building_idx] ON Apartment ([ID_Building] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Person`
-- -----------------------------------------------------
CREATE TABLE Person (
  [SSN] INT NOT NULL,
  [First_name] VARCHAR(45) NULL,
  [Last_name] VARCHAR(45) NULL,
  PRIMARY KEY ([SSN]))
;


-- -----------------------------------------------------
-- Table `mydb`.`Tenant`
-- -----------------------------------------------------
CREATE TABLE Tenant (
  [TenantID] INT NOT NULL,
  [ID_Apartment] INT NOT NULL,
  [ID_Building] INT NOT NULL,
  [BankAccount] VARCHAR(45) NULL,
  PRIMARY KEY ([TenantID])
 ,
  CONSTRAINT [fk_Tenant_Person1]
    FOREIGN KEY ([TenantID])
    REFERENCES Person ([SSN])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT [fk_Tenant_Apartment1]
    FOREIGN KEY ([ID_Apartment] , [ID_Building])
    REFERENCES Apartment ([ID_Apartment] , [ID_Building])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_Tenant_Apartment1_idx] ON Tenant ([ID_Apartment] ASC, [ID_Building] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`PhoneNumber`
-- -----------------------------------------------------
CREATE TABLE PhoneNumber (
  [PhoneNumber] VARCHAR NOT NULL,
  [SSN] INT NOT NULL,
  PRIMARY KEY ([PhoneNumber])
 ,
  CONSTRAINT [fk_PhoneNumber_Person1]
    FOREIGN KEY ([SSN])
    REFERENCES Person ([SSN])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_PhoneNumber_Person1_idx] ON PhoneNumber ([SSN] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Employee`
-- -----------------------------------------------------
CREATE TABLE Employee (
  [Person_SSN] INT NOT NULL,
  [Salary] INT NULL
 ,
  PRIMARY KEY ([Person_SSN]),
  CONSTRAINT [fk_Employee_Person1]
    FOREIGN KEY ([Person_SSN])
    REFERENCES Person ([SSN])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_Employee_Person1_idx] ON Employee ([Person_SSN] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Technician`
-- -----------------------------------------------------
CREATE TABLE Technician (
  [TechnicianID] INT NOT NULL
 ,
  PRIMARY KEY ([TechnicianID]),
  CONSTRAINT [fk_Technician_Employee1]
    FOREIGN KEY ([TechnicianID])
    REFERENCES Employee ([Person_SSN])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_Technician_Employee1_idx] ON Technician ([TechnicianID] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Skill`
-- -----------------------------------------------------
CREATE TABLE Skill (
  [Skill] VARCHAR(45) NOT NULL,
  [TechnicianID] INT NOT NULL,
  PRIMARY KEY ([Skill], [TechnicianID])
 ,
  CONSTRAINT [fk_Skill_Technician1]
    FOREIGN KEY ([TechnicianID])
    REFERENCES Technician ([TechnicianID])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_Skill_Technician1_idx] ON Skill ([TechnicianID] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Manager`
-- -----------------------------------------------------
CREATE TABLE Manager (
  [Manager_ID] INT NOT NULL,
  [ID_Apartment_Office] INT NULL,
  [ID_Building_Office] INT NULL,
  PRIMARY KEY ([Manager_ID]),
  CONSTRAINT [fk_Manager_Employee1]
    FOREIGN KEY ([Manager_ID])
    REFERENCES Employee ([Person_SSN])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT [fk_Manager_Apartment1]
    FOREIGN KEY ([ID_Apartment_Office] , [ID_Building_Office])
    REFERENCES Apartment ([ID_Apartment] , [ID_Building])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
	
;

CREATE INDEX [fk_Manager_Employee1_idx] ON Manager ([Manager_ID] ASC);
CREATE INDEX [fk_Manager_Apartment1_idx] ON Apartment ([ID_Apartment] ASC, [ID_Building] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Agreement`
-- -----------------------------------------------------
CREATE TABLE Agreement (
  [ID_Agrement] INT NOT NULL,
  [ID_Apartment] INT NOT NULL,
  [ID_Building] INT NOT NULL,
  [Manager_ID] INT NOT NULL,
  [StartDate] DATE NULL,
  [EndDate] DATE NULL,
  [SecurityDeposit] INT NULL,
  [MonthlyRent] INT NULL,
  PRIMARY KEY ([ID_Agrement])
 ,
  CONSTRAINT [fk_Agreement_Apartment1]
    FOREIGN KEY ([ID_Apartment] , [ID_Building])
    REFERENCES Apartment ([ID_Apartment] , [ID_Building])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT [fk_Agreement_Manager1]
    FOREIGN KEY ([Manager_ID])
    REFERENCES Manager ([Manager_ID])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_Agreement_Apartment1_idx] ON Agreement ([ID_Apartment] ASC, [ID_Building] ASC);
CREATE INDEX [fk_Agreement_Manager1_idx] ON Agreement ([Manager_ID] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Signs`
-- -----------------------------------------------------
CREATE TABLE Signs (
  [TenantID] INT NOT NULL,
  [ID_Agreement] INT NOT NULL,
  PRIMARY KEY ([TenantID], [ID_Agreement])
 ,
  CONSTRAINT [fk_Signs_Agreement1]
    FOREIGN KEY ([ID_Agreement])
    REFERENCES Agreement ([ID_Agrement])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT [fk_Signs_Tenant1]
    FOREIGN KEY ([TenantID])
    REFERENCES Tenant ([TenantID])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_Signs_Agreement1_idx] ON Signs ([ID_Agreement] ASC);
CREATE INDEX [fk_Signs_Tenant1_idx] ON Signs ([TenantID] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Next_of_kin`
-- -----------------------------------------------------
CREATE TABLE Next_of_kin (
  [PhoneNumber] VARCHAR(45) NOT NULL,
  [TenantID] INT NOT NULL,
  [Role] VARCHAR(45) NULL,
  PRIMARY KEY ([PhoneNumber])
 ,
  CONSTRAINT [fk_Next_of_kin_Tenant1]
    FOREIGN KEY ([TenantID])
    REFERENCES Tenant ([TenantID])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_Next_of_kin_Person1_idx] ON Next_of_kin ([TenantID] ASC);


-- -----------------------------------------------------
-- Table `mydb`.`Work`
-- -----------------------------------------------------
CREATE TABLE Work (
  [SSN] INT NOT NULL,
  [ID_Building] INT NOT NULL,
  PRIMARY KEY ([SSN], [ID_Building])
 ,
  CONSTRAINT [fk_Work_Building1]
    FOREIGN KEY ([ID_Building])
    REFERENCES Building ([ID_Building])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT [fk_Work_Employee1]
    FOREIGN KEY ([SSN])
    REFERENCES Employee ([Person_SSN])
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX [fk_Work_Employee1_idx] ON Work ([SSN] ASC);


/* SET SQL_MODE=@OLD_SQL_MODE; */
/* SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS; */
/* SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS; */
